0.1
--------------------------------------------
* First prototype version of DB packager


Changes from 0.1 to 0.2
--------------------------------------------
* Completely different approach. Codes now may interconnect in grafs 
  of codifiers, whereas older version allowed only tree-like structures.
* API intoduced. It's now possible (recommended) to work with codifiers 
  using only functions, without referring codes tables.


Changes from 0.2 to 0.3
--------------------------------------------
* New version of STANDARD (0.3)


Changes from 0.3 to 0.4
--------------------------------------------
* Completely remade API.
* Added power to names of codes in different languages. Now they obey 
  uniqueness rules (same as codes.code_text does) in scopes of languages. 
* Code is now addressable by 4 types of keys:
   -- Simple code key               - not always enough to identify plain code
   -- Codified code key             - identify any code
   -- Simple code key by language   - extension of simple code key
   -- Codified code key by language - extension of codified code key 
* No more dependency from Language. Now the package codifies languages itself.
  Language package consumed. Future versions of packages, 
  that required Language will now require Codifier.


Changes from 0.4 to 0.5
--------------------------------------------
* Generalized "code_lngname_construction_input" -> "name_construction_input".
  Added hints, how to use provided sources as templates for administrative
  API fo any other child-table of "named_in_languages" ancestor-table.
* No more dependency from Name. Name package consumed. 
  Field "entity" of "names" table is now :: integer - FK to a code under 
  codifier "Entities". 
* Solved insufficient namespacing bug (it wasn't possible to call Codifier 
  function from other schema). 
* Added 2 sequences for codifiers "Languages" (9000-9499) and 
  "Entities" (9500-9999). Also added "new_code" function extension, 
  that accepts used-defined sequence for code ID generation. 


Changes from 0.5 to 0.5.1
--------------------------------------------
* Added function "optimize_acodekeyl", which grounds any key to contain IDs.
* Tables "names" and "named_in_languages" are now abstract - one can't 
  INSERT, UPDATE or DELETE with them. To put it that way, had to 
  remove FOREIGN KEYs from table "names" and "named_in_languages", because 
  their ON UPDATE CASCADE rules would conflict 
  with INSTEAD OF UPDATE DO NOTHING.


Changes from 0.5.1 to 0.5.2
--------------------------------------------
* Added functions "optimized_[a]codekey[l]_isit".


Changes from 0.5.2 to 0.5.3
--------------------------------------------
* Added a parameter on 1st place to function "optimize_acodekeyl": 
  par_ifexists :: boolean. 
  Now function may tolerate cases, when code not found and 
  when given key is insifficient to satisfy determination mask.
* Added functions:
     + optimization_mode_for_acodekeyl(par_acodekeyl t_addressed_code_key_by_lng, par_determination_preference_mask integer, par_imperative_or_mask integer)
     + optimize_acodekeyl(par_ifexists boolean, par_acodekeyl t_addressed_code_key_by_lng, par_determination_preference_mask integer, par_imperative_or_mask integer)
     + optimize_acodekeyl(par_ifexists boolean, par_acodekeyl t_addressed_code_key_by_lng)


Changes from 0.5.3 to 0.5.4
--------------------------------------------
* Correction of sequences: 
      **         codifiers IDs are at   1000-79999
      **       plain codes IDs are at 100000-maxint
      **   languages codes IDs are at  80000-89999
      ** nameable entities IDs are at  90000-99999
      **          reserved IDs are at      0-  999


Changes from 0.5.4 to 0.6.0
--------------------------------------------
* Migrated on Standard v0.3 (from v0.2) 
* Migrated on DBP-tpl template v0.4 (from v0.3). Some code reorganization. 
* Got rid of enter_schema_namespace() and added some IMMUTABLE hints.


Changes from 0.6.0 to 0.6.1
--------------------------------------------
* Code now has 4 additional fields (were 5) 
* Codes tree row now has 4 additional fields (were 0) 
* Added functions:
     ++ find_subcodes(
                  par_if_exists boolean
                , par_cf_key    t_addressed_code_key_by_lng
                , par_in_scope_of_cf_key  t_code_key_by_lng
                , par_include_code_itself
                                boolean
                , par_only_ones_not_reachable_from_elsewhere
                                boolean
                ) RETURNS SETOF codes_tree_node
        , which finds all subcodes of target ($2), 
        belonging to mentioned codifier ($3)
     ++ find_supercodes(
                  par_if_exists boolean
                , par_c_key     t_addressed_code_key_by_lng
                , par_in_scope_of_cf_key  t_code_key_by_lng
                , par_include_code_itself
                                boolean
                , par_only_ones_not_reachable_from_elsewhere
                                boolean
                ) RETURNS SETOF codes_tree_node
        , which finds all supercodes of target ($2), 
        belonging to mentioned codifier ($3)
* Some minor changes.


Changes from 0.6.1 to 0.7.0
--------------------------------------------
* Added "dedicated codifier-tables" infrastructure element. 
  Table for metadata: "dedicated_codifiertables". 
  Manage dedicated codifier-tables using new functions: 
     ++ remove_dedicated_codifiertable(par_cf_key t_code_key_by_lng, par_tablename regclass, par_drop_table boolean)
     ++ new_dedicated_codifiertable(par_cf_key t_code_key_by_lng, par_tablename name, par_table_exists boolean, par_fullindexing boolean)
     ++ dedicated_codifiertable_by_tabname(par_table_name regclass)
  (Notice: table creation/removal is allowed to application owner, 
           not data admin
  )
  This innovation allows to avoid usage 
  of "code_belongs_to_codifier" function in table constraints 
  in favor to normal FOREIGN KEY.
* API now uses dedicated codifier-table "languages" 
  for work with language codes.


Changes from 0.7.0 to 0.7.1
--------------------------------------------
* Package template in the base is now of v0.5
